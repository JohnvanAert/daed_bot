from datetime import date
from aiogram import Bot, Router, F
from aiogram.types import Message
from database import (
    get_upcoming_executor_deadlines,
    get_upcoming_specialist_deadlines
)

router = Router()

# üîπ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º
async def notify_executors(bot: Bot):
    tasks = await get_upcoming_executor_deadlines()
    today = date.today()

    for task in tasks:
        if task["status"] == "–°–¥–µ–ª–∞–Ω–æ":
            continue

        days_left = (task["deadline"] - today).days
        executor_id = task["executor_id"]
        task_id = task["task_executor_id"]
        title = task["title"]

        if days_left < 0:
            msg = f"‚ö†Ô∏è –ó–∞–¥–∞—á–∞ #{task_id} ¬´{title}¬ª –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞!"
        elif days_left == 0:
            msg = f"üìÖ –°–µ–≥–æ–¥–Ω—è –¥–µ–¥–ª–∞–π–Ω –ø–æ –∑–∞–¥–∞—á–µ #{task_id} ¬´{title}¬ª."
        elif days_left == 1:
            msg = f"‚è≥ –ó–∞–≤—Ç—Ä–∞ –¥–µ–¥–ª–∞–π–Ω –ø–æ –∑–∞–¥–∞—á–µ #{task_id} ¬´{title}¬ª."
        else:
            continue

        await bot.send_message(chat_id=executor_id, text=msg)


# üîπ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º
async def notify_specialists(bot: Bot):
    tasks = await get_upcoming_specialist_deadlines()
    today = date.today()

    for task in tasks:
        if task["status"] == "–°–¥–µ–ª–∞–Ω–æ":
            continue

        days_left = (task["deadline"] - today).days
        specialist_id = task["specialist_id"]
        task_id = task["id"]
        section = task["section"].upper()

        if days_left < 0:
            msg = f"‚ö†Ô∏è –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ –∑–∞–¥–∞—á–∞ –ø–æ —Ä–∞–∑–¥–µ–ª—É {section}, –∑–∞–¥–∞—á–∞ #{task_id}"
        elif days_left == 0:
            msg = f"üìÖ –°–µ–≥–æ–¥–Ω—è –¥–µ–¥–ª–∞–π–Ω –ø–æ —Ä–∞–∑–¥–µ–ª—É {section}, –∑–∞–¥–∞—á–∞ #{task_id}"
        elif days_left == 1:
            msg = f"‚è≥ –ó–∞–≤—Ç—Ä–∞ –¥–µ–¥–ª–∞–π–Ω –ø–æ —Ä–∞–∑–¥–µ–ª—É {section}, –∑–∞–¥–∞—á–∞ #{task_id}"
        else:
            continue

        await bot.send_message(chat_id=specialist_id, text=msg)


# üîÑ –û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def run_deadline_check(bot: Bot):
    await notify_executors(bot)
    await notify_specialists(bot)


# üöÄ –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ /test_deadlines
@router.message(F.text == "/test_deadlines")
async def test_manual_check(message: Message, bot: Bot):
    await run_deadline_check(bot)
    await message.answer("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–¥–ª–∞–π–Ω–æ–≤ –≤—Ä—É—á–Ω—É—é –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.")
