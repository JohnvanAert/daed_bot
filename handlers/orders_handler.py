from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from database import get_orders_by_gip  # —É–∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞

router = Router()

@router.message(F.text == "/orders")
async def show_orders(message: Message):
    gip_id = message.from_user.id
    orders = await get_orders_by_gip(gip_id)

    if not orders:
        await message.answer("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
        return

    for order in orders:
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üîõ –ü–æ–¥–∫–ª—é—á–∏—Ç—å –ê–†", callback_data=f"connect_ar:{order['id']}")]
            ]
        )

        text = (
            f"üìÑ <b>{order['title']}</b>\n"
            f"üìù {order['description'] or '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}\n"
            f"üìé <a href=\"{order['document_url']}\">–î–æ–∫—É–º–µ–Ω—Ç</a>"
        )

        await message.answer(text, reply_markup=keyboard)

@router.callback_query(F.data.startswith("connect_ar:"))
async def handle_connect_ar(callback: CallbackQuery):
    order_id = int(callback.data.split(":")[1])

    # –ó–¥–µ—Å—å –ª–æ–≥–∏–∫–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ —Ä–∞–∑–¥–µ–ª—É –ê–†
    await callback.message.edit_text(
        f"‚úÖ –†–∞–∑–¥–µ–ª <b>–ê–†</b> –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –∑–∞–∫–∞–∑—É #{order_id}. –ù–∞–∑–Ω–∞—á—å—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞."
    )
