from aiogram import Router, F
from aiogram.types import Message, FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton
from database import get_expert_tasks

router = Router()

@router.message(F.text == "üìÇ –ú–æ–∏ –∑–∞–∫–∞–∑—ã")
async def show_expert_tasks(message: Message):
    tasks = await get_expert_tasks(message.from_user.id)

    if not tasks:
        await message.answer("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.")
        return

    for task in tasks:
        caption = (
            f"üìå –ó–∞–∫–∞–∑: <b>{task['order_title']}</b>\n"
            f"–†–∞–∑–¥–µ–ª: <b>{task['section'].upper()}</b>\n"
            f"–û–ø–∏—Å–∞–Ω–∏–µ: {task['order_description']}"
        )

        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìé –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∑–∞–º–µ—á–∞–Ω–∏—è", callback_data=f"send_note:{task['task_id']}")]
        ])

        doc_path = f"clientbot/documents/{task['document_url']}"
        try:
            await message.answer_document(
                document=FSInputFile(doc_path),
                caption=caption,
                parse_mode="HTML",
                reply_markup=keyboard
            )
        except Exception as e:
            await message.answer(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {doc_path}")
