from aiogram import Router
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.filters import CommandStart

from keyboards.main_menu import send_main_menu
from keyboards.customer_menu import customer_menu
from keyboards.expert_menu import send_expert_main_menu

from states.registration_states import RegisterState, ExpertRegistrationFSM, RoleSelectionFSM
from states.states import RegisterCustomer  # –î–ª—è –∑–∞–∫–∞–∑—á–∏–∫–∞

from database import (
    get_user_by_telegram_id,
    get_customer_by_telegram_id,
    get_expert_by_telegram_id,
)

router = Router()

@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    user_id = message.from_user.id

    # 1. –ó–∞–∫–∞–∑—á–∏–∫
    customer = await get_customer_by_telegram_id(user_id)
    if customer:
        if customer.get("archived"):  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è —á—Ç–æ –≤ —Ç–∞–±–ª–∏—Ü–µ customers –µ—Å—Ç—å –ø–æ–ª–µ archived BOOLEAN
            await message.answer(
                "‚ö†Ô∏è –í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –≤ –∞—Ä—Ö–∏–≤–µ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è."
            )
            return

        await message.answer("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —É–≤–∞–∂–∞–µ–º—ã–π –∑–∞–∫–∞–∑—á–∏–∫!", reply_markup=customer_menu())
        return

    # 2. –≠–∫—Å–ø–µ—Ä—Ç
    expert = await get_expert_by_telegram_id(user_id)
    if expert:
        if expert.get("archived"):  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è —á—Ç–æ –∏ –¥–ª—è —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –µ—Å—Ç—å –ø–æ–ª–µ archived
            await message.answer(
                "‚ö†Ô∏è –í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –≤ –∞—Ä—Ö–∏–≤–µ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è."
            )
            return

        await message.answer(
            f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>{expert['full_name']}</b>! –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ —ç–∫—Å–ø–µ—Ä—Ç.",
            reply_markup=ReplyKeyboardRemove(),
            parse_mode="HTML"
        )
        await send_expert_main_menu(message)
        return

    # 3. –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å / —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç
    user = await get_user_by_telegram_id(user_id)
    if user:
        if user.get("is_archived"):
            await send_main_menu(message, role=user["role"], section=user["section"], archived=True)
            return


        await message.answer(
            f"üëã –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ <b>{user['role'].capitalize()}</b>.",
            reply_markup=ReplyKeyboardRemove(),
            parse_mode="HTML"
        )
        await send_main_menu(message, role=user["role"], section=user["section"])
        return

    # 4. –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî –≤—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å
    keyboard = ReplyKeyboardMarkup(
        resize_keyboard=True,
        keyboard=[
            [KeyboardButton(text="üë∑ –Ø –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤—â–∏–∫")],
            [KeyboardButton(text="üì¶ –Ø –∑–∞–∫–∞–∑—á–∏–∫")],
            [KeyboardButton(text="üß† –Ø —ç–∫—Å–ø–µ—Ä—Ç")]
        ]
    )
    await message.answer("üöÄ –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ, –∫—Ç–æ –≤—ã:", reply_markup=keyboard)
    await state.set_state(RoleSelectionFSM.choosing_role)


@router.message(RoleSelectionFSM.choosing_role)
async def handle_role_selection(message: Message, state: FSMContext):
    text = message.text.strip().lower()

    if "–∑–∞–∫–∞–∑—á–∏–∫" in text:
        await message.answer("üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:", reply_markup=ReplyKeyboardRemove())
        await state.set_state(RegisterCustomer.waiting_for_full_name)

    elif "—ç–∫—Å–ø–µ—Ä—Ç" in text:
        await message.answer("üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é:", reply_markup=ReplyKeyboardRemove())
        await state.set_state(ExpertRegistrationFSM.waiting_for_name)

    elif "–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤—â–∏–∫" in text or "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å" in text:
        await message.answer("üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é:", reply_markup=ReplyKeyboardRemove())
        await state.set_state(RegisterState.waiting_for_name)

    else:
        await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.")
